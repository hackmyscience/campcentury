@mixin get-all-space {
	position: absolute;
	left: 0;
	top: 0;
	bottom: 0;
	right: 0;
}

/*
 * Usage:
 * selector {
 *     @include size(margin, 10, 20, 30, 40);
 *     @include size(font-size, 2);
 * }
 *

    ACCEPT px value instead rem.
 */

@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

@mixin size($property, $values...) {
    $max: length($values);
    $pxValues: '';
    $remValues: '';

    @for $i from 1 through $max {
        $value: strip-unit(nth($values, $i));
        $pxValues: #{$pxValues + $value}px;

        @if $i < $max {
            $pxValues: #{$pxValues + " "};
        }
    }

    @for $i from 1 through $max {
        $value: strip-unit(nth($values, $i));
        $remValues: #{$remValues + $value / 16}rem;

        @if $i < $max {
            $remValues: #{$remValues + " "};
        }
    }

    #{$property}: $pxValues;
    #{$property}: $remValues;
}

@function pxtoem($num){
    @return $num / 16;
}


@mixin square($px) {
    width: #{$px + "px"};
    height: #{$px + "px"};

    width: #{pxtoem($px) + "rem"};
    height: #{pxtoem($px) + "rem"};
}

@mixin ifless($px, $what) {
    @media only screen and (max-#{$what}: #{pxtoem($px)}em) {
        @content;
    }
}

@mixin ifmore($px, $what) {
    @media only screen and (min-#{$what}: #{pxtoem($px)}em) {
        @content;
    }
}

@mixin center_y {
    position: absolute;
    top: 50%;
    @include transform(translateY(-50%));
}

@mixin center_x {
    position: absolute;
    left: 50%;
    @include transform(translateX(-50%));
}

@mixin center_xy {
    position: absolute;
    top: 50%;
    left: 50%;
    @include transform(translate(-50%, -50%));
}